ID	variable	replacement
G1	P';P	(smallest_Incorrect01_old); (smallest_Incorrect01_new)
S1	m	(RIPR Model, G1)
G2	Tri	G2.x1:((tr7), S1)
S2	Tri; a	S2.x1:(((tr7); (Symbolic Execution)), G2.x1)
C1	Tri; BB	C1.x1:(((tr7); (%entry,%land.lhs.true,%land.lhs.true2,%if.else,%if.else10,%if.else13,%return)), G2.x1)
G3	;	Completeness to TRs are correctly considered
G4	tcj	G4.x1:((0,1,1,0), S2.x1), G4.x2:((0,0,0,0), G3), G4.x3:((0,0,3,1), G3), G4.x4:((0,1,0,0), G3), G4.x5:((0,1,1,1), G3), G4.x6:((2,1,3,4), G3)
Sn1	tcj	Sn1.x1:((0,1,1,0), G4.x1), Sn1.x2:((0,0,0,0), G4.x2), Sn1.x3:((0,0,3,1), G4.x3), Sn1.x4:((0,1,0,0), G4.x4), Sn1.x5:((0,1,1,1), G4.x5), Sn1.x6:((2,1,3,4), G4.x6)

Sn1.x1 1.000000 1.000000
Sn1.x2 0.670000 1.000000
Sn1.x3 0.670000 1.000000
Sn1.x4 1.000000 1.000000
Sn1.x5 1.000000 1.000000
Sn1.x6 0.330000 1.000000


# tr1: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%land.lhs.true5,%land.lhs.true7,%if.then9,%return

# tr2: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%land.lhs.true5,%land.lhs.true7,%if.else10,%if.then12,%return

# tr3: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%land.lhs.true5,%land.lhs.true7,%if.else10,%if.else13,%return

# tr4: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%land.lhs.true5,%if.else10,%if.then12,%return

# tr5: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%land.lhs.true5,%if.else10,%if.else13,%return

# tr6: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%if.else10,%if.then12,%return

# tr7: %entry,%land.lhs.true,%land.lhs.true2,%if.else,%if.else10,%if.else13,%return
# old path:%entry %land.lhs.true %land.lhs.true2 %if.else %if.else10 %if.else13 %return 
# test case(0,1,1,0) : 1B p 1.000000 1.000000
# %entry %land.lhs.true %land.lhs.true2 %if.else %if.else10 %if.else13 %return p 
distance: 1.000000




#full beyond trs:
# old path: %entry %if.else %if.else10 %if.else13 %return 
# test case(0,0,0,0) : 1B p 0.670000 1.000000
# new path: %entry %if.else %land.lhs.true5 %if.else10 %if.else13 %return p 
distance: 0.833333

# old path: %entry %if.else %if.else10 %if.else13 %return 
# test case(0,0,3,1) : 2 f 0.670000 1.000000
# new path: %entry %if.else %land.lhs.true5 %land.lhs.true7 %if.then9 %return p 
distance: 0.500000

# old path: %entry %land.lhs.true %if.else %if.else10 %if.else13 %return 
# test case(0,1,0,0) : 1B p 1.000000 1.000000
# new path: %entry %land.lhs.true %if.else %if.else10 %if.else13 %return p 
distance: 1.000000

# old path: %entry %land.lhs.true %land.lhs.true2 %if.then %return 
# test case(0,1,1,1) : 1B p 1.000000 1.000000
# new path: %entry %land.lhs.true %land.lhs.true2 %if.then %return p 
distance: 1.000000

# old path: %entry %if.else %land.lhs.true5 %land.lhs.true7 %if.then9 %return 
# test case(2,1,3,4) : 2 p 0.330000 1.000000
# new path: %entry %if.else %if.else10 %if.then12 %return p 
distance: 0.500000


